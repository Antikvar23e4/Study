USE UNIVER;
/* 1 Использовать в секции WHERE преди-кат IN */
SELECT PULPIT_NAME
FROM PULPIT, FACULTY
WHERE PULPIT.FACULTY = FACULTY.FACULTY
  AND FACULTY.FACULTY IN (
    SELECT PROFESSION.FACULTY
    FROM PROFESSION
    WHERE PROFESSION_NAME LIKE ('%технология%')
       OR PROFESSION_NAME LIKE ('%технологии%')
  );

/* 2 тот же подзапрос был записан в конструкции INNER JOIN секции FROM внешнего запроса */
SELECT PULPIT.PULPIT_NAME
FROM PULPIT
INNER JOIN FACULTY ON PULPIT.FACULTY = FACULTY.FACULTY
AND FACULTY.FACULTY IN (
    SELECT PROFESSION.FACULTY
    FROM PROFESSION
    WHERE PROFESSION_NAME LIKE ('%технология%')
    OR PROFESSION_NAME LIKE ('%технологии%')
);

/* 3 без использования подзапроса */
SELECT DISTINCT PULPIT.PULPIT_NAME
FROM PULPIT
INNER JOIN FACULTY ON PULPIT.FACULTY = FACULTY.FACULTY
INNER JOIN PROFESSION ON FACULTY.FACULTY = PROFESSION.FACULTY
WHERE PROFESSION_NAME LIKE '%технологи%';

/* 4 : использовать коррелируемый подзапрос c секциями TOP и ORDER BY*/
SELECT DISTINCT AUDITORIUM_TYPE, AUDITORIUM_CAPACITY
FROM AUDITORIUM AS a
WHERE AUDITORIUM_CAPACITY = (
    SELECT TOP(1) AUDITORIUM_CAPACITY
    FROM AUDITORIUM AS b
    WHERE b.AUDITORIUM_TYPE = a.AUDITORIUM_TYPE
    ORDER BY AUDITORIUM_CAPACITY DESC
)
ORDER BY AUDITORIUM_CAPACITY DESC;

/* 5 Использовать предикат EXISTS и коррелированный подзапрос */
SELECT *
FROM FACULTY
WHERE EXISTS (
    SELECT *
    FROM PULPIT
    WHERE PULPIT.FACULTY = FACULTY.FACULTY
);

/* 6 использовать три некоррелированных под-запроса в списке SELECT; в подзапросах применить агрегатные функции AVG.  */
SELECT 
top(1)
(SELECT  AVG(NOTE) FROM PROGRESS WHERE [SUBJECT] = 'ОАиП') AS 'ОАиП',
(SELECT AVG(NOTE) FROM PROGRESS WHERE [SUBJECT] = 'КГ') AS 'КГ',
(SELECT  AVG(NOTE) FROM PROGRESS WHERE [SUBJECT] = 'СУБД') AS 'СУБД'
FROM PROGRESS;

/* 7 Разработать SELECT-запрос, демон-стрирующий способ применения ALL совместно с подзапросом */
SELECT [SUBJECT], IDSTUDENT, NOTE
FROM PROGRESS a
WHERE NOTE >= ALL (
    SELECT NOTE
    FROM PROGRESS
    WHERE [SUBJECT] = a.[SUBJECT]
);

/* 8 Разработать SELECT-запрос, демон-стрирующий принцип применения ANY совместно с подзапросом.*/
SELECT AUDITORIUM,AUDITORIUM_TYPE, AUDITORIUM_NAME
FROM AUDITORIUM
WHERE AUDITORIUM_CAPACITY >= ANY (
    SELECT AUDITORIUM_CAPACITY
    FROM AUDITORIUM
);
