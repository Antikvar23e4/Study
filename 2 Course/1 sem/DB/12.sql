/*1 неявная*/
USE UNIVER
GO
SET NOCOUNT ON
	IF EXISTS (SELECT * FROM  SYS.OBJECTS     
	            WHERE OBJECT_ID= OBJECT_ID(N'DBO.M') )	            
	DROP TABLE M;    
	
	DECLARE @C INT, @FLAG CHAR = 'C';      
	SET IMPLICIT_TRANSACTIONS  ON    
	CREATE TABLE M(K INT );                        
		INSERT M VALUES (1),(2),(3);
		SET @C = (SELECT COUNT(*) FROM M);
		PRINT 'КОЛИЧЕСТВО СТРОК В ТАБЛИЦЕ M: ' + CAST( @C AS VARCHAR(2));
		IF @FLAG = 'C'  COMMIT;                   
	          ELSE   ROLLBACK;          
      SET IMPLICIT_TRANSACTIONS  OFF  
	
	IF  EXISTS (SELECT * FROM  SYS.OBJECTS      
	            WHERE OBJECT_ID= OBJECT_ID(N'DBO.M') )
	PRINT 'Таблица M есть';  
      ELSE PRINT 'Таблицы M нету'

/*2 атомарность явной*/
BEGIN TRY
	BEGIN TRAN               И
		INSERT FACULTY VALUES ('ИТ', 'Факультет информационных технологий');
	    INSERT FACULTY VALUES ('ПИМ', 'ФАКУЛЬТЕТ PRINT-ТЕХНОЛОГИЙ');
	COMMIT TRAN;               --фиксация
END TRY

BEGIN CATCH
	PRINT 'Ошибка: '+ CASE
		WHEN ERROR_NUMBER() = 2627 AND PATINDEX('%PK__FACULTY%', ERROR_MESSAGE()) > 0 THEN 'дублирование '	
		ELSE 'Неизвестная ошибка: '+ CAST(ERROR_NUMBER() AS  VARCHAR(5))+ ERROR_MESSAGE()
	END;
	IF @@TRANCOUNT > 0 ROLLBACK TRAN; 
END CATCH;

DELETE FACULTY WHERE FACULTY = 'ПИМ';

SELECT * FROM FACULTY;

/*3 SAVE TRAN */
DECLARE @POINT VARCHAR(32);

BEGIN TRY
	BEGIN TRAN
		SET @POINT = 'P1';
		SAVE TRAN @POINT;  
		INSERT FACULTY( FACULTY,FACULTY_NAME) VALUES
		                      ('ПИМ1','ЯЛЛЯЛЯ'),
							  ('ПИМ2','ТОПОЛЯ'),
							  ('ПИМ3','АВРВЫРРВ');
		SET @POINT = 'P2';
		SAVE TRAN @POINT; 
		INSERT FACULTY( FACULTY,FACULTY_NAME) VALUES
							  ('ИТ', 'Факультет информационных технологий');
	COMMIT TRAN;
END TRY

BEGIN CATCH
	PRINT 'Ошибка: '+ CASE
		WHEN ERROR_NUMBER() = 2627 AND PATINDEX('%PK__FACULTY%', ERROR_MESSAGE()) > 0 THEN 'дублирование'
		ELSE 'Неизвестная ошибка: '+ CAST(ERROR_NUMBER() AS  VARCHAR(5)) + ERROR_MESSAGE()
	END;
    IF @@TRANCOUNT > 0 
	BEGIN
	   PRINT 'Контрольная точка: '+ @POINT;
	   ROLLBACK TRAN @POINT; -- откат к послед выполн контрольн точке
	   COMMIT TRAN; -- фиксация
	END;
END CATCH;

SELECT * FROM FACULTY;
DELETE FACULTY WHERE FACULTY = 'ПИМ1';
DELETE FACULTY WHERE FACULTY = 'ПИМ2';
DELETE FACULTY WHERE FACULTY = 'ПИМ3';

/*4 READ UNCOMMITED допуск все  */
/* A */
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;
BEGIN TRANSACTION;
-- t1
SELECT TOP(10) * FROM STUDENT ORDER BY IDSTUDENT DESC;
-- t2
SELECT * FROM  STUDENT
COMMIT;

/*5 READ COMMITED  возможно неповторя-ющееся и фантомное чтение. */
/* A */
SET TRANSACTION ISOLATION LEVEL READ COMMITTED;
BEGIN TRANSACTION;
-- t1
SELECT TOP(10) * FROM STUDENT ORDER BY IDSTUDENT DESC;
-- t2
SELECT TOP(10) * FROM STUDENT ORDER BY IDSTUDENT DESC;
COMMIT;

/*6 REPEATABLE READ. возможно фантомное чтение. */
/* A */
SET TRANSACTION ISOLATION LEVEL REPEATABLE READ;
BEGIN TRANSACTION;
-- t1
SELECT TOP(10) * FROM STUDENT ORDER BY IDSTUDENT DESC;
-- t2
SELECT TOP(10) * FROM STUDENT ORDER BY IDSTUDENT DESC;
COMMIT;

/*7 SERIALIZABLE. */
/* A */
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;
BEGIN TRANSACTION;
DELETE FROM PROGRESS WHERE Note = 9;
INSERT PROGRESS VALUES ('СУБД', 1015, '2013-12-01', 10);
UPDATE PROGRESS SET NOTE = 9 WHERE NOTE = 10;
SELECT * FROM PROGRESS WHERE NOTE = 9;
-- t2
SELECT * FROM PROGRESS WHERE NOTE = 9;
COMMIT;

/*8*/
BEGIN TRAN
	INSERT AUDITORIUM_TYPE VALUES ('Пример', 'Какой-то кабинет');
	insert into  AUDITORIUM   (AUDITORIUM, AUDITORIUM_NAME,  AUDITORIUM_TYPE, AUDITORIUM_CAPACITY)   
values  ('9999', '9999','Пример', 15);
COMMIT
	BEGIN TRAN
		UPDATE AUDITORIUM SET AUDITORIUM = '666' WHERE AUDITORIUM_TYPE = 'Пример'
		COMMIT
		IF @@TRANCOUNT > 0 ROLLBACK
	SELECT
		(SELECT COUNT(*) FROM AUDITORIUM WHERE AUDITORIUM_TYPE='Пример') 'Аудитории',
		(SELECT COUNT(*) FROM AUDITORIUM_TYPE  WHERE AUDITORIUM_TYPE='Пример') 'Тип'
DELETE  AUDITORIUM WHERE  AUDITORIUM_TYPE = 'Пример';
DELETE  AUDITORIUM_TYPE WHERE  AUDITORIUM_TYPE = 'Пример'; 
SELECT * FROM AUDITORIUM_TYPE;
SELECT * FROM AUDITORIUM;
