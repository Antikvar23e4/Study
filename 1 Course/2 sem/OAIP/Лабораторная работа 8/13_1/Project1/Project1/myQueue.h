#pragma once
#include <iostream>

struct node // описание элементов очереди
{
    int elem; // информационное поле
    node* sled; // указатель на следующий элемент
};
class Spisok {
private: // закрытые члены – это члены класса, к которым могут получить доступ только другие члены класса
    node* no, * ko; // указатели на начало и конец списка
    int klad; // используется для хранения информационного поля удаляемого элемента
public: // открытые члены — это члены структуры или класса, к которым можно получить доступ извне
    Spisok() {
        no = ko = NULL; // инициализируем указатели no и ko значением NULL
    } // конструктор
    void POSTROENIE(); // построение очереди на базе однонаправленного списка без заглавного звена
    void VYVOD(); // вывод содержимого очереди
    void DOBAVLENIE(); // добавление звена с информационным полем el к очереди
    int  Set_Udal() { return klad; } // возврат информационного поля удаляемого элемента
    void YDALENIE(); // удаление звена из очереди
    void OCHISTKA(); // возврат выделенной памяти в "кучу"
    int Size();
    int findMax();
    int findMin();

};
